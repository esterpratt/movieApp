{"version":3,"sources":["services/movieService.js","services/secretData.js","store/actions.js","components/layout/Filter.js","components/movie/MovieRating.js","components/movie/Image.js","components/movie/MovieDisplay.js","components/movie/ErrorDisplay.js","views/HomePage.js","components/layout/Header.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["URL_BASE","concat","movieService","query","_callee","filter","URL","res","_args","arguments","regenerator_default","a","wrap","_context","prev","next","length","undefined","year","title","axios","get","sent","abrupt","data","stop","this","Filter","state","isChanged","handleChange","ev","_this","setState","Object","defineProperty","target","id","value","markChange","onSubmitSearch","preventDefault","props","onReset","react_default","createElement","className","onSubmit","FormControl_default","InputLabel_default","htmlFor","Input_default","aria-describedby","onChange","FormHelperText_default","error","type","Button_default","variant","color","Icon_default","onClick","Component","MovieRating","roundedRating","Math","round","rating","stars","i","push","txt","map","star","idx","key","votes","Image","onError","src","poster","onLoad","onPosterLoad","alt","MovieDisplay","movie","keys","forEach","actors","Actors","split","actorTxt","Poster","showMovieClass","Title","Released","substring","Year","Country","Runtime","movie_Image","Plot","Director","Website","href","imdbRating","movie_MovieRating","imdbVotes","ErrorDisplay","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","info","console","log","children","errorToDisplay","HomePage","searchMovie","resetDisplay","layout_Filter","movie_MovieDisplay","movie_ErrorDisplay","connect","dispatch","_ref","asyncToGenerator","mark","Error","_x","apply","action","Header","NavLink","to","App","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initialState","reducer","objectSpread","theme","createMuiTheme","palette","primary","main","lightBlue","secondary","deepOrange","typography","useNextVariants","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85d25b91.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { API_KEY } from './secretData';\r\nconst URL_BASE = `https://www.omdbapi.com/?apikey=${API_KEY}&type=movie`;\r\n\r\nexport default {\r\n    query\r\n}\r\n\r\n// loads movies\r\nasync function query(filter = {}) {\r\n    const URL = filter.year ? \r\n    `${URL_BASE}&t=${filter.title}&y=${filter.year}` :\r\n    `${URL_BASE}&t=${filter.title}`;\r\n    const res = await axios.get(URL);\r\n    return res.data;\r\n}","// obviously not secret right now...\r\nexport const API_KEY = '5864d30a';","import movieService from '../services/movieService';\r\n\r\nexport const searchMovie = (filter) => {\r\n    return async (dispatch) => {\r\n        const movie = await movieService.query(filter);\r\n        // if movie wasn't found\r\n        if (movie.Error) {\r\n            dispatch({\r\n                type: 'UPDATE_MOVIE',\r\n                error: movie.Error,\r\n                movie: null\r\n            })\r\n        // if movie was found\r\n        } else {\r\n            dispatch({\r\n                type: 'UPDATE_MOVIE',\r\n                error: movie.Error,\r\n                movie\r\n            })\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nclass Filter extends Component {\r\n\r\n    state = {\r\n        // isChanged is used to check if it's the first load \r\n        // and therefor shouldn't show error if title input is empty\r\n        isChanged: false,\r\n        title: '',\r\n        year: ''\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({\r\n            [ev.target.id]: ev.target.value\r\n        })\r\n        this.markChange();\r\n    }\r\n\r\n    onSubmitSearch = (ev) => {\r\n        ev.preventDefault();\r\n        this.markChange();\r\n        if (this.state.title) {\r\n            this.props.onSubmitSearch(this.state);\r\n        }\r\n    }\r\n\r\n    markChange = () => {\r\n        if (!this.state.isChanged) {\r\n            this.setState({\r\n                isChanged: true\r\n            })\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        this.setState({\r\n            isChanged: false,\r\n            title: '',\r\n            year: ''\r\n        })\r\n        this.props.onReset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"filter\">\r\n                <form onSubmit={this.onSubmitSearch}>\r\n                    <FormControl className=\"title\">\r\n                        <InputLabel htmlFor=\"title\">Movie Title</InputLabel>\r\n                        <Input id=\"title\"\r\n                            value={this.state.title}\r\n                            aria-describedby=\"component-error-text\"\r\n                            onChange={this.handleChange} />\r\n                            <FormHelperText error id=\"component-error-text\" \r\n                            className={this.state.isChanged && !this.state.title ? 'red' : 'neutral'}>\r\n                            Please fill in the title\r\n                            </FormHelperText>\r\n                    </FormControl>\r\n                    <FormControl className=\"year\">\r\n                        <InputLabel htmlFor=\"year\">Release Year</InputLabel>\r\n                        <Input id=\"year\"\r\n                            value={this.state.year}\r\n                            type=\"number\"\r\n                            aria-describedby=\"component-error-text\"\r\n                            onChange={this.handleChange} />\r\n                    </FormControl>\r\n                    <Button className=\"search\" variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        Search Movie\r\n                        <Icon>send</Icon>\r\n                    </Button>\r\n                    <Button className=\"clear\" variant=\"contained\" color=\"secondary\" onClick={this.onReset}>\r\n                        Clear\r\n                        <Icon>clear</Icon>\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst MovieRating = (props) => {\r\n    const roundedRating = Math.round(props.rating)\r\n    const stars = [];\r\n\r\n    // creats 10 stars and colors the right amount according to the rating\r\n    for (let i = 0; i < 10; i++) {\r\n        stars.push({\r\n            txt: '★',\r\n            color: i < roundedRating ? 'yellow' : 'nuetral'\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"movie-rating\">\r\n            <div className=\"rating\">\r\n                <p>Rating: {props.rating}</p>\r\n                <div className=\"stars\">\r\n                    {\r\n                        stars.map((star, idx) => {\r\n                            return (\r\n                                <span key={idx} className={star.color}>{star.txt}</span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <p className=\"votes\">Votes: {props.votes}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieRating;","import React from 'react';\r\n\r\nconst Image = (props) => {\r\n\r\n    return (\r\n        <img \r\n        onError={props.onError}\r\n        src={props.poster} \r\n        onLoad={props.onPosterLoad}\r\n        className=\"movie-poster\" \r\n        alt=\"Movie Poster\" />\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\nimport MovieRating from './MovieRating';\r\nimport Image from './Image';\r\n\r\nconst MovieDisplay = (props) => {\r\n    let { movie } = props;\r\n    const DEF_IMG_SRC = '/img/na.PNG';\r\n\r\n    // change each 'N/A' movie-property to 'null' \r\n    // so it will be easier to check it later\r\n    Object.keys(movie).forEach(key => {\r\n        if (movie[key] === 'N/A') {\r\n            movie[key] = null\r\n        }\r\n    })\r\n\r\n    // split actors to an array.\r\n    // Right now it's used to check if there is only 1 actor, \r\n    // although there are easier ways to do it, it makes sense to leave it\r\n    // so it will be possible to later use actors as an array\r\n    const actors = movie.Actors ? movie.Actors.split(',') : movie.Actors;\r\n    const actorTxt = (actors && actors.length === 1) ? 'Actor' : 'Actors'\r\n\r\n    // if there is no movie poster - shows default image\r\n    movie.Poster = movie.Poster ? movie.Poster : DEF_IMG_SRC;\r\n\r\n    const addDefaultSrc = (ev) => {\r\n        ev.target.src = DEF_IMG_SRC;\r\n    }\r\n\r\n    return (\r\n        <div className={`movie-display ${props.showMovieClass}`}>\r\n            <div className=\"movie-header\">\r\n                <h2>{movie.Title}</h2>\r\n                <div>\r\n                    <p>{movie.Released ? movie.Released.substring(movie.Released.length - 4) : movie.Year}</p>\r\n                    <p>{movie.Country}</p>\r\n                    <p>{movie.Runtime}</p>\r\n                </div>\r\n            </div>\r\n            <Image \r\n            onPosterLoad={props.onPosterLoad} \r\n            onError={addDefaultSrc}\r\n            poster={movie.Poster} />\r\n            <div className=\"movie-content\">\r\n                <p>{movie.Plot}</p>\r\n                {movie.Director && (\r\n                    <p>Directed by: {movie.Director}</p>\r\n                )}\r\n                {movie.Actors && (\r\n                    <div className=\"actors\">\r\n                        <p>{actorTxt}: {movie.Actors}</p>\r\n                    </div>\r\n                )}\r\n                <div className=\"website\">{movie.Website && (\r\n                    <a href={movie.Website} target={'_blank'}>{movie.Website}</a>\r\n                )}</div>\r\n            </div>\r\n            {movie.imdbRating &&\r\n                <MovieRating rating={movie.imdbRating} votes={movie.imdbVotes} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDisplay;","import React, { Component } from 'react';\r\n\r\nclass ErrorDisplay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: this.props.error\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { error: this.props.errorToDisplay }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log('Error:', error, '. Info:', info);\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state;\r\n        if (error) {\r\n            return (\r\n                <div className=\"error-display\">\r\n                    <h2>{error}</h2>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorDisplay;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchMovie } from '../store/actions';\r\nimport Filter from '../components/layout/Filter';\r\nimport MovieDisplay from '../components/movie/MovieDisplay';\r\nimport ErrorDisplay from '../components/movie/ErrorDisplay';\r\n\r\nclass HomePage extends Component {\r\n\r\n    state = {\r\n        showMovieClass: ''\r\n    }\r\n\r\n    onSubmitSearch = (filter) => {\r\n        this.setState({\r\n            showMovieClass: ''\r\n        })\r\n        this.props.searchMovie(filter);\r\n    }\r\n\r\n    onReset = () => {\r\n        this.props.resetDisplay();\r\n    }\r\n\r\n    onPosterLoad = () => {\r\n        this.setState({\r\n            showMovieClass: 'show'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-page\">\r\n                <h1>Find your movie!</h1>\r\n                <Filter onSubmitSearch={this.onSubmitSearch}\r\n                    onReset={this.onReset} />\r\n                <div className=\"center\">\r\n                    {this.props.movie && (\r\n                            <MovieDisplay\r\n                                showMovieClass={this.state.showMovieClass}\r\n                                movie={this.props.movie}\r\n                                onPosterLoad={this.onPosterLoad} />\r\n                    )}\r\n                    {this.props.error && (<ErrorDisplay error={this.props.error} />)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movie: state.movie,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchMovie: (filter) => dispatch(searchMovie(filter)),\r\n        resetDisplay: () => dispatch({ type: 'UPDATE_MOVIE', action: { error: null, movie: null } })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink to=\"/\">\r\n                    MOVIE\r\n                    <span className=\"app-span\">APP\r\n                        <span className=\"star\">★</span>\r\n                    </span>\r\n                </NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport HomePage from './views/HomePage';\nimport Header from './components/layout/Header';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n            </Switch>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    movie: null,\r\n    error: null,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_MOVIE':\r\n            return {\r\n                ...state,\r\n                movie: action.movie,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducer';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport { lightBlue } from '@material-ui/core/colors';\n\n// create a colors theme for material-ui\nconst theme = createMuiTheme({\n    palette: {\n        primary: { main: lightBlue[900] },\n        secondary: { main: deepOrange[900] },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n            <App />\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}